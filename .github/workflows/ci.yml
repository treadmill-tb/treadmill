name: treadmill-end-to-end-ci
on:
  push:
    branches-ignore:
      - 'gh-readonly-queue/**'
  pull_request:
  merge_group:
env:
  TERM: xterm
  POSTGRES_DB: tml_switchboard
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - name: Set up database
        run: |
          psql -h localhost -U $POSTGRES_USER -d $POSTGRES_DB -f switchboard/sql/SCHEMA.sql
          psql -h localhost -U $POSTGRES_USER -d $POSTGRES_DB -f switchboard/sql/FIXTURES.sql
        env:
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
      - name: Build components
        run: |
          cargo build --package tml-switchboard
          cargo build --package tml-mock-supervisor
          cargo build --package tml-puppet
      - name: Generate test configurations
        run: |
          cp switchboard/switchboard/config.example.toml switchboard_config.toml
          cp supervisor/mock/config.example.toml mock_supervisor_config.toml
          # Generate any necessary TLS certificates or keys
      - name: Start switchboard
        run: "cargo run --package tml-switchboard -- serve -c switchboard_config.toml &\necho $! > switchboard.pid\nsleep 5 \n"
      - name: Start mock supervisor
        run: |
          cargo build --package tml-puppet
          nohup cargo run --package tml-mock-supervisor -- -c mock_supervisor_config.toml --puppet-binary ./target/debug/tml-puppet > mock_supervisor.log 2>&1 &
          echo $! > mock_supervisor.pid
          sleep 5
      - name: Run database interaction tests
        run: |
          echo "TODO"
      - name: Run puppet communication tests
        run: |
          echo "TODO"
        # cargo test --package tml-puppet
      - name: Collect and report results
        run: ''
      - name: Stop services
        run: |
          kill $(cat switchboard.pid) || true
          kill $(cat mock_supervisor.pid) || true
          cat mock_supervisor.log
      - name: Check for errors in mock supervisor log
        run: "if grep -i error mock_supervisor.log; then\n  echo \"Errors found in mock supervisor log\"\n  exit 1\nfi  \n"
  ci-format:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: rustfmt check
        uses: actions-rust-lang/rustfmt@v1
  ci-build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build all crates
        run: |
          # Pass --locked to ensure that the lockfile in the repository stays current
          cargo build --locked
